name: build-darwin-arm64

on:
  workflow_call:
    inputs:
      apio_config:
        required: true
        type: string

jobs:
  build:
    runs-on: macos-latest

    # outputs:
    #   bundle: "apio-darwin-arm64-bundle"
    #   installer: "apio-darwin-arm64-installer"

    env:
      APIO_REPO: value-tbd
      APIO_TAG: value-tbd
      APIO_COMMIT: value-tbd
      APIO_VERSION: value-tbd

    defaults:
      run:
        shell: bash  # Set Bash as the default shell

    steps:
      - name: Check architecture
        run: |
          uname
          uname -m
          if [[ "$(uname)" != "Darwin" || "$(uname -m)" != "arm64" ]]; then
            exit 1
          fi

      # This copies the apio config json key/val to the env.
      - name: Set up env
        run: |
          echo '${{inputs.apio_config}}' | jq -r 'to_entries | .[] | "\(.key)=\(.value)"' >> $GITHUB_ENV


      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'  # Adjust version as needed


      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          path: apio-dev-builds-repo


      - name: Checkout the apio repo
        uses: actions/checkout@v4
        with:
          repository: ${{env.APIO_REPO}}
          ref: ${{env.APIO_COMMIT}}
          path: apio-repo
          fetch-depth: 0


      - name: Pip install apio
        run: |
          python -m pip install --upgrade pip
          pip install -e apio-repo


      - name: Pip install pyinstaller
        run: |
          pip install pyinstaller


      # A temporary workaround until this fix will be released
      # https://github.com/pyinstaller/pyinstaller-hooks-contrib/pull/913
      # We delete the usb line in the hook pyinstaller hook list file
      # rthooks.dat to disable this hook.
      - name: Patch pyinstaller usb hook
        run: |
          module_dir=$(dirname "$(python -c 'import _pyinstaller_hooks_contrib; print(_pyinstaller_hooks_contrib.__file__)')")
          f="$module_dir/rthooks.dat"
          cat -n $f
          sed -i.bak "/'usb':/d" "$f" && rm -f "${f}.bak"
          cat -n $f


      - name: Set up working directories
        run: |
          mkdir _work
          mkdir _dist
          mkdir _scripts
          pwd
          ls -la .


      - name: Run pyinstaller
        run: |
          pyinstaller \
            --log-level=DEBUG \
            --workpath _work \
            --distpath _dist \
            apio-dev-builds-repo/.github/workflows/resources/apio-pyinstaller.spec
          echo "_dist:"
          ls -al _dist
          echo "_dist/apio:"
          ls -al _dist/apio


      - name: Add LICENSE file
        run: |
          cp apio-repo/LICENSE _dist/apio
          echo "_dist:"
          ls -al _dist
          echo "_dist/apio:"
          ls -al _dist/apio


      - name: Add INFO file
        run: |
          info_file="_dist/apio/INFO"
          echo "Build information" >  ${info_file}
          echo "Time:         $(date +'%Y-%m-%d %H:%M:%S %Z')" >> ${info_file}
          echo "Run ID:       $GITHUB_RUN_ID" >> ${info_file}
          echo "Run number:   $GITHUB_RUN_NUMBER" >> ${info_file}
          echo "Commit SHA:   $GITHUB_SHA" >>  ${info_file}
          echo "Branch:       ${GITHUB_REF#refs/heads/}" >> ${info_file}
          echo "Repo owner:   $GITHUB_REPOSITORY_OWNER" >> ${info_file}
          echo "ReponName:    ${GITHUB_REPOSITORY#*/} ">> ${info_file}
          echo "_dist/apio:"
          ls -al _dist/apio
          cat -n _dist/apio/INFO


      - name: Add 'activate' file
        run: |
          cp apio-dev-builds-repo/.github/workflows/resources/darwin/activate _dist/apio/activate
          echo "_dist/apio:"
          ls -al _dist/apio
          cat -n _dist/apio/activate


      - name: Zip the pyinstaller bundle
        run: |
          pushd _dist
          bundle="apio-darwin-arm64-${APIO_VERSION}-${APIO_TAG}-bundle.zip"
          zip -r -y ../${bundle} apio
          popd
          ls -al


      - name: Delete the 'activate' file
        run: |
          rm _dist/apio/activate
          echo "_dist/apio:"
          ls -al _dist/apio


      # This sets the app name in /Applications
      - name: Rename apio to Apio
        run: |
          mv _dist/apio _dist/Apio
          echo "_dist:"
          ls -al _dist


      - name: Create installer postinstall scripts
        run: |
          cp apio-dev-builds-repo/.github/workflows/resources/darwin/postinstall _scripts/postinstall
          chmod 755 _scripts/postinstall
          echo "_scripts:"
          ls -al _scripts
          echo "_scripts/postinstall:"
          cat -n _scripts/postinstall


      - name: Run pkgbuild
        run: |
          pkgbuild --root _dist \
                   --install-location /Applications \
                   --identifier "io.github.fpgawars.apio" \
                   --version "${APIO_VERSION}" \
                   --scripts _scripts \
                   --ownership recommended \
                   apio-component.pkg
          pwd
          ls -al


      - name: Run productbuild
        run: |
          productbuild --resources apio-dev-builds-repo/.github/workflows/resources/darwin \
                       --distribution apio-dev-builds-repo/.github/workflows/resources/darwin/distribution.xml \
                       --package-path . \
                       "apio-darwin-arm64-${APIO_VERSION}-${APIO_TAG}-installer.pkg"
          pwd
          ls -al


      - name: Export the pyinstaller bundle as an artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: "apio-darwin-arm64-bundle"
          path: "apio-darwin-arm64-${{env.APIO_VERSION}}-${{env.APIO_TAG}}-bundle.zip"


      - name: Export the installer file as an artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: "apio-darwin-arm64-installer"
          path: "apio-darwin-arm64-${{env.APIO_VERSION}}-${{env.APIO_TAG}}-installer.pkg"

