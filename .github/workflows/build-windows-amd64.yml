name: build-windows-amd64


on:
  workflow_call:
    inputs:
      apio_config:
        required: true
        type: string


jobs:
  build:
    runs-on: windows-latest

    defaults:
      run:
        shell: bash  # Set Bash as the default shell

    steps:
      - name: Check architecture
        run: |
          uname -o
          uname -m
          if [[ "$(uname -o 2>/dev/null)" != "Msys" || "$(uname -m)" != "x86_64" ]]; then
            exit 1
          fi


      # This copies the apio config json key/val to the env.
      - name: Set up env
        run: |
          echo '${{inputs.apio_config}}' | jq .
          echo '${{inputs.apio_config}}' | jq -r 'to_entries | .[] | "\(.key)=\(.value)"' >> $GITHUB_ENV


      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'  # Adjust version as needed


      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          path: builder-repo


      - name: Checkout the apio repo
        uses: actions/checkout@v4
        with:
          repository: ${{env.APIO_REPO}}
          ref: ${{env.APIO_COMMIT}}
          path: apio-repo
          fetch-depth: 0


      - name: Pip install apio
        run: |
          python -m pip install --upgrade pip
          pip install -e apio-repo


      - name: Pip install pyinstaller
        run: |
          pip install pyinstaller


      # A temporary workaround until this fix will be released
      # https://github.com/pyinstaller/pyinstaller-hooks-contrib/pull/913
      # We delete the usb line in the hook pyinstaller hook list file
      # rthooks.dat to disable this hook.
      - name: Patch pyinstaller usb hook
        run: |
          module_dir=$(dirname "$(python -c 'import _pyinstaller_hooks_contrib; print(_pyinstaller_hooks_contrib.__file__)')")
          f="$module_dir/rthooks.dat"
          cat -n $f
          sed -i.bak "/'usb':/d" "$f" && rm -f "${f}.bak"
          cat -n $f


      - name: Set up working directories
        run: |
          mkdir _work
          mkdir _dist
          pwd
          ls -la .


      - name: Run pyinstaller
        run: |
          pyinstaller \
            --log-level=DEBUG \
            --workpath _work \
            --distpath _dist \
            builder-repo/.github/workflows/resources/apio-pyinstaller.spec
          echo "_dist:"
          ls -al _dist
          echo "_dist/apio:"
          ls -al _dist/apio
          file _dist/apio/apio


      - name: Download the build-info artifact
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: ${{env.APIO_WF}}
          run_id: ${{env.APIO_RUN}}
          name: apio-build-info-${{env.APIO_RUN}}
          path: artifacts


      - name: Add the BUILD-INFO file
        run: |
          cp artifacts/BUILD-INFO _dist/apio
          cat -n _dist/apio/BUILD-INFO


      - name: Add the LICENSE file
        run: |
          cp apio-repo/LICENSE _dist/apio
          cat _dist/apio/LICENSE


      - name: List the bundle files
        run: |
          find _dist


      - name: Zip the pyinstaller bundle
        shell: powershell
        run: |
          # The github window bash doesn't have 'zip' so we use powershell instead.
          Push-Location _dist
          $bundle = "apio-windows-amd64-${{env.APIO_VERSION}}-${{env.APIO_TAG}}-bundle.zip"
          Compress-Archive -Path apio -DestinationPath ../${bundle}
          Pop-Location
          Get-ChildItem -Force


      - name: Create innosetup.iss
        run: |
          out="innosetup.iss"
          sed "s/\[APIO_VERSION\]/${APIO_VERSION}/g" builder-repo/.github/workflows/resources/windows/innosetup.template > ${out}
          ls -al
          cat -n ${out}

      - name: Run innosetup
        shell: cmd
        run: |
          "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" innosetup.iss
          dir

      - name: Rename innosetup installer
        run: |
          ls -al
          mv innosetup-installer.exe "apio-windows-amd64-${APIO_VERSION}-${APIO_TAG}-installer.exe"
          ls -al

      - name: Export the pyinstaller bundle as an artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: "apio-windows-amd64-bundle"
          path: "apio-windows-amd64-${{env.APIO_VERSION}}-${{env.APIO_TAG}}-bundle.zip"


      - name: Export the installer file as an artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: "apio-windows-amd64-installer"
          path: "apio-windows-amd64-${{env.APIO_VERSION}}-${{env.APIO_TAG}}-installer.exe"
