name: "build-all"

on:
  # Run on each commit to this repo.
  push:

  # Allow manual activations.
  workflow_dispatch:


permissions:
  # Allow release creation
  contents: write

jobs:

  # ----- Parameters collection job

  prepare:

    runs-on: ubuntu-latest

    outputs:
      date_tag: ${{ steps.get_date_tag.outputs.date_tag }}
      apio_commit: ${{ steps.get_apio_commit.outputs.apio_commit }}
      apio_version: ${{ steps.get_apio_version.outputs.apio_version }}

    env:
      DATE_TAG: value-tbd
      APIO_COMMIT: value-tbd
      APIO_VERSION: value-tbd

    steps:

      - name: Get date tag
        id: get_date_tag
        run: |
          date_tag="$(date +'%Y-%m-%d')"
          echo "${date_tag}"
          echo "date_tag=${date_tag}" >> "$GITHUB_OUTPUT"


      - name: Checkout the apio repo
        uses: actions/checkout@v4
        with:
          repository: FPGAwars/apio
          # repository: zapta/apio-dev
          ref: develop
          path: apio-repo


      - name: Get apio commit SHA
        id: get_apio_commit
        run: |
          apio_commit=$(git -C apio-repo rev-parse HEAD)
          echo "${apio_commit}"
          echo "apio_commit=${apio_commit}" >> "$GITHUB_OUTPUT"


      - name: Pip install apio
        run: |
          python -m pip install --upgrade pip
          pip install -e apio-repo


      - name: Get apio version
        id: get_apio_version
        run: |
          apio_version="$(pip show apio | grep Version: | cut -d ' ' -f2)"
          echo ${apio_version}
          echo "apio_version=${apio_version}" >> $GITHUB_OUTPUT


  # ----- Children build jobs

  build-darwin_arm64:
    needs: prepare
    uses: ./.github/workflows/build-darwin-arm64.yml
    with:
      date_tag: ${{ needs.prepare.outputs.date_tag }}
      apio_commit: ${{ needs.prepare.outputs.apio_commit }}
      apio_version: ${{ needs.prepare.outputs.apio_version }}
    secrets: inherit


  build-linux-x86-64:
    needs: prepare
    uses: ./.github/workflows/build-linux-x86-64.yml
    with:
      date_tag: ${{ needs.prepare.outputs.date_tag }}
      apio_commit: ${{ needs.prepare.outputs.apio_commit }}
      apio_version: ${{ needs.prepare.outputs.apio_version }}
    secrets: inherit


  build-windows-amd64:
    needs: prepare
    uses: ./.github/workflows/build-windows-amd64.yml
    with:
      date_tag: ${{ needs.prepare.outputs.date_tag }}
      apio_commit: ${{ needs.prepare.outputs.apio_commit }}
      apio_version: ${{ needs.prepare.outputs.apio_version }}
    secrets: inherit


  # ----- Release creation job

  publish:
      needs: [prepare, build-darwin_arm64, build-linux-x86-64, build-windows-amd64]

      runs-on: ubuntu-latest

      env:
        DATE_TAG: date-tag-tbd

      steps:

        - name: Set up env
          run: |
            echo "DATE_TAG=${{ needs.prepare.outputs.date_tag }}" >> "$GITHUB_ENV"
            echo "APIO_COMMIT=${{ needs.prepare.outputs.apio_commit }}" >> "$GITHUB_ENV"
            echo "APIO_VERSION=${{ needs.prepare.outputs.apio_version }}" >> "$GITHUB_ENV"

        - name: Download the build artifacts
          uses: actions/download-artifact@v4
          with:
            path: artifacts


        - name: List artifact files
          run: |
            find artifacts


        - name: Create GitHub release
          uses: softprops/action-gh-release@v2
          with:
            tag_name: ${{env.DATE_TAG}}
            name: ${{env.DATE_TAG}}
            body: |
              This is an automated build of the Apio's repo `develop` branch.

              ```
                  DATE_TAG:      ${{env.DATE_TAG}}
                  APIO_VERSION:  ${{env.APIO_VERSION}}
                  APIO_COMMIT:   ${{env.APIO_COMMIT}}
              ```

              Resources
              * [installation instructions](https://github.com/${{github.repository}}).
              * [Official Apio releases](https://github.com/FPGAwars/apio/releases).

            files: |
              # Darwin
              artifacts/apio-darwin-arm64-bundle/**
              artifacts/apio-darwin-arm64-installer/**

              # Linux
              artifacts/apio-linux-x86-64-bundle/**
              artifacts/apio-linux-x86-64-debian/**

              # Windows
              artifacts/apio-windows-amd64-bundle/**
              artifacts/apio-windows-amd64-installer/**

